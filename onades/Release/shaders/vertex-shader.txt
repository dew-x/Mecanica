#version 150

in float height; // point height
in int gl_VertexID; // vertex id
//Send the color of the vertex to the fragment shader
out vec4 fragmentColor;

	//MVP matrices
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform int size;
uniform float dist;

void main() {
	vec3 vertexPosition = vec3(((gl_VertexID/size)-size/2)*dist,height,((gl_VertexID%size)-size/2)*dist);
	//Multiply the vertex by the model matrix transformation
	gl_Position = projectionMatrix*viewMatrix*modelMatrix*vec4(vertexPosition, 1);
	//We need to create the output variables that will go to the fragment shader,
	//so, we assign the in variables to the new out variables	
	//fragmentColor=vec4(vertexColor,1.0);
	//fragmentColor = vec4(1.0,0,0,0);
	
	vec4 top = vec4(1.0, 1.0, 1.0, 1.0);
	vec4 bottom = vec4(0.0, 0.0, 1.0, 1.0);
	
	fragmentColor = vec4(mix(bottom, top, (tanh(height*20)+1)/2));
	gl_PointSize = 3;
}


